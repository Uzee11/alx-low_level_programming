#include "lists.h"
#include <stdlib.h>

/**
 * insert_dnodeint_at_index - Inserts a new node at a given position in a dlistint_t list
 * @h: Pointer to the pointer of the head of the list
 * @idx: Index at which the new node should be added
 * @n: Value to be assigned to the new node
 * Return: The address of the new node, or NULL if it failed
 */
dlistint_t *insert_dnodeint_at_index(dlistint_t **h, unsigned int idx, int n)
{
    dlistint_t *new_node, *temp;
    unsigned int i;

    /* Allocate memory for the new node */
    new_node = malloc(sizeof(dlistint_t));
    if (new_node == NULL)
        return NULL;

    /* Initialize the new node */
    new_node->n = n;
    new_node->prev = NULL;
    new_node->next = NULL;

    /* If the list is empty and idx is 0, new node is both head and tail */
    if (*h == NULL && idx == 0)
    {
        *h = new_node;
        return new_node;
    }

    /* If the list is not empty, traverse to the desired index */
    temp = *h;
    for (i = 0; i < idx - 1 && temp != NULL; i++)
        temp = temp->next;

    /* Check if the desired index was reached */
    if (i == idx - 1 && temp != NULL)
    {
        /* Insert the new node at the desired position */
        new_node->prev = temp;
        new_node->next = temp->next;
        if (temp->next != NULL)
            temp->next->prev = new_node;
        temp->next = new_node;
        return new_node;
    }
    else
    {
        /* If the desired index is not reachable, free the new node and return NULL */
        free(new_node);
        return NULL;
    }
}
